//
// Created by Rich Elmes on 18.11.2024.
//

#include "AudioMixComponent.h"

namespace amigaMon {

    AudioMixComponent::AudioMixComponent(amigaMon::Amiga& amigaToUse)
        : IconBase(amigaToUse)
    {
        static const unsigned char pathData[] = { 110,109,0,236,84,69,174,139,9,69,108,174,207,86,69,61,250,16,69,108,225,146,96,69,61,250,16,69,108,215,195,103,69,40,12,29,69,108,133,167,52,69,40,12,29,69,108,72,217,59,69,60,250,16,69,108,82,156,69,69,60,250,16,69,108,92,127,71,69,173,139,9,69,98,225,
90,63,69,193,129,10,69,123,148,55,69,40,172,4,69,72,165,55,69,233,97,248,68,98,72,165,55,69,233,97,248,68,72,165,55,69,212,83,132,68,72,165,55,69,212,83,132,68,98,72,49,56,69,14,238,67,68,113,5,76,69,4,247,84,68,215,107,87,69,35,60,83,68,98,82,196,94,
69,35,60,83,68,184,198,100,69,189,69,107,68,184,198,100,69,212,83,132,68,98,184,198,100,69,212,83,132,68,184,198,100,69,232,97,248,68,184,198,100,69,232,97,248,68,98,61,214,100,69,234,169,4,69,71,17,93,69,213,131,10,69,215,235,84,69,131,139,9,69,99,109,
112,125,64,68,61,98,248,68,108,112,125,64,68,40,84,132,68,98,112,125,64,68,193,69,107,68,122,116,40,68,39,60,83,68,235,17,11,68,203,60,83,68,98,163,240,186,67,172,247,84,68,152,112,98,66,182,238,67,68,152,112,63,66,40,84,132,68,98,152,112,63,66,40,84,
132,68,152,112,63,66,60,98,248,68,152,112,63,66,60,98,248,68,98,101,61,59,66,163,172,4,69,110,61,43,67,20,130,10,69,214,195,150,67,214,139,9,69,108,101,166,135,67,101,250,16,69,108,82,56,230,66,101,250,16,69,108,0,0,0,0,82,12,29,69,108,236,113,76,68,
82,12,29,69,108,113,173,47,68,102,250,16,69,108,72,161,8,68,102,250,16,69,108,144,18,1,68,215,139,9,69,98,82,168,33,68,41,132,10,69,42,188,64,68,61,170,4,69,21,126,64,68,143,98,248,68,99,109,51,51,131,68,123,212,80,67,108,51,51,131,68,11,255,15,69,98,
51,51,131,68,206,44,23,69,153,241,142,68,83,12,29,69,20,78,157,68,83,12,29,69,108,194,29,25,69,83,12,29,69,98,10,75,32,69,83,12,29,69,61,42,38,69,247,44,23,69,61,42,38,69,11,255,15,69,108,61,42,38,69,123,212,80,67,98,61,42,38,69,195,245,187,66,10,75,
32,69,0,0,0,0,194,29,25,69,0,0,0,0,108,19,78,157,68,0,0,0,0,98,152,241,142,68,0,0,0,0,50,51,131,68,164,240,187,66,50,51,131,68,123,212,80,67,99,109,20,198,231,68,174,243,17,69,98,153,249,36,69,102,10,17,69,92,247,36,69,20,70,144,68,30,197,231,68,184,
118,142,68,98,10,151,133,68,164,72,144,68,60,154,133,68,204,12,17,69,20,198,231,68,174,243,17,69,99,109,122,196,231,68,102,46,245,68,98,143,70,6,69,0,128,244,68,194,69,6,69,112,221,189,68,122,196,231,68,164,48,189,68,98,60,250,194,68,92,223,189,68,214,
251,194,68,246,128,244,68,122,196,231,68,102,46,245,68,99,109,122,196,231,68,234,33,89,68,98,153,69,12,69,50,83,87,68,122,68,12,69,78,216,140,67,40,196,231,68,140,66,137,67,98,40,252,182,68,140,226,140,67,20,254,182,68,193,85,87,68,122,196,231,68,234,
33,89,68,99,109,122,196,231,68,214,179,42,68,98,132,11,250,68,9,7,42,68,235,9,250,68,152,121,231,67,122,196,231,68,142,34,230,67,98,102,126,213,68,111,125,231,67,102,126,213,68,81,8,42,68,122,196,231,68,214,179,42,68,99,109,0,228,63,69,122,236,137,68,
98,0,228,63,69,122,236,137,68,0,228,63,69,30,29,241,68,0,228,63,69,30,29,241,68,98,123,228,63,69,10,23,249,68,205,36,67,69,184,150,255,68,154,33,71,69,91,151,255,68,98,154,33,71,69,91,151,255,68,174,15,86,69,91,151,255,68,174,15,86,69,91,151,255,68,98,
0,12,90,69,183,150,255,68,123,76,93,69,101,22,249,68,123,76,93,69,30,29,241,68,98,123,76,93,69,30,29,241,68,123,76,93,69,122,236,137,68,123,76,93,69,122,236,137,68,98,123,76,93,69,91,239,133,68,82,124,92,69,81,80,130,68,164,44,91,69,213,99,127,68,98,
31,221,89,69,8,39,122,68,195,13,88,69,121,228,118,68,174,15,86,69,121,228,118,68,98,174,15,86,69,121,228,118,68,154,33,71,69,121,228,118,68,154,33,71,69,121,228,118,68,98,205,36,67,69,101,230,118,68,164,228,63,69,235,241,129,68,0,228,63,69,204,236,137,
68,99,109,62,106,87,69,122,236,137,68,98,62,106,87,69,122,236,137,68,62,106,87,69,30,29,241,68,62,106,87,69,30,29,241,68,98,62,106,87,69,61,218,241,68,144,66,87,69,163,136,242,68,42,4,87,69,184,6,243,68,98,83,32,87,69,215,155,244,68,73,145,71,69,184,
150,243,68,114,33,71,69,51,211,243,68,98,42,100,70,69,51,211,243,68,227,198,69,69,92,151,242,68,186,198,69,69,31,29,241,68,98,186,198,69,69,31,29,241,68,186,198,69,69,123,236,137,68,186,198,69,69,123,236,137,68,98,186,198,69,69,92,47,137,68,104,238,69,
69,154,129,136,68,73,45,70,69,143,2,136,68,98,247,16,70,69,194,109,134,68,216,159,85,69,225,114,135,68,134,15,86,69,102,54,135,68,98,83,204,86,69,102,54,135,68,144,106,87,69,153,113,136,68,62,106,87,69,122,236,137,68,99,109,128,212,51,67,122,236,137,
68,98,128,212,51,67,122,236,137,68,128,212,51,67,30,29,241,68,128,212,51,67,30,29,241,68,98,77,225,51,67,81,24,249,68,241,209,103,67,10,151,255,68,13,215,147,67,91,151,255,68,98,13,215,147,67,91,151,255,68,165,160,5,68,91,151,255,68,165,160,5,68,91,151,
255,68,98,144,146,21,68,183,150,255,68,216,147,34,68,101,22,249,68,216,147,34,68,30,29,241,68,98,216,147,34,68,30,29,241,68,216,147,34,68,122,236,137,68,216,147,34,68,122,236,137,68,98,216,147,34,68,91,239,133,68,52,83,31,68,81,80,130,68,32,21,26,68,
213,99,127,68,98,104,214,20,68,8,39,122,68,155,153,13,68,121,228,118,68,165,160,5,68,121,228,118,68,98,165,160,5,68,121,228,118,68,12,215,147,67,121,228,118,68,12,215,147,67,121,228,118,68,98,239,209,103,67,193,229,118,68,75,225,51,67,81,240,129,68,126,
212,51,67,204,236,137,68,99,109,134,11,11,68,122,236,137,68,108,134,11,11,68,30,29,241,68,98,134,11,11,68,61,218,241,68,1,112,10,68,163,136,242,68,216,115,9,68,184,6,243,68,98,206,220,9,68,30,157,244,68,2,96,151,67,194,149,243,68,12,215,147,67,51,211,
243,68,98,104,230,141,67,51,211,243,68,114,253,136,67,82,152,242,68,43,252,136,67,31,29,241,68,98,43,252,136,67,31,29,241,68,43,252,136,67,123,236,137,68,43,252,136,67,123,236,137,68,98,43,252,136,67,92,47,137,68,84,56,138,67,154,129,136,68,94,47,140,
67,143,2,136,68,98,12,119,139,67,225,106,134,68,216,211,3,68,112,117,135,68,165,160,5,68,102,54,135,68,98,196,149,8,68,102,54,135,68,22,14,11,68,153,113,136,68,134,11,11,68,122,236,137,68,99,101,0,0 };

    stereoIcon.loadPathFromData (pathData, sizeof (pathData));
    }

    void AudioMixComponent::paint(juce::Graphics& g)
    {
        auto bounds = getLocalBounds().toFloat().reduced(1, 1);
        g.setColour(juce::Colours::white.withAlpha(0.1f));
        g.fillRoundedRectangle(bounds, 5.0f);
        g.setColour(juce::Colours::white.withAlpha(0.8f));
        {
            juce::Graphics::ScopedSaveState state(g);
            g.reduceClipRegion(0, amiga.getAudioMixFactor() * bounds.getHeight(), bounds.getWidth(), bounds.getHeight());
            g.fillRoundedRectangle(bounds, 5.0f);
        }
        g.setColour(juce::Colours::black.withAlpha(0.6f));
        auto iconBounds = bounds.removeFromBottom(bounds.getWidth());
        iconBounds.reduce(5, 5);
        // stroke path in bounds
        stereoIcon.scaleToFit(iconBounds.getX(), iconBounds.getY(), iconBounds.getWidth(), iconBounds.getHeight(), true);
        g.strokePath(stereoIcon, juce::PathStrokeType(0.5f));
    }

    void AudioMixComponent::mouseDown(const juce::MouseEvent &event)
    {
        lastMousePos = event.position;
    }

    void AudioMixComponent::mouseDrag(const juce::MouseEvent &event)
    {
        auto deltaY = event.position.y - lastMousePos.y;
        auto newMix = juce::jlimit(0.0f, 1.0f, amiga.getAudioMixFactor() + deltaY / getHeight());
        amiga.setAudioMixFactor(newMix);
        lastMousePos = event.position;
        repaint();
    }

    void AudioMixComponent::mouseUp(const juce::MouseEvent &event)
    {
        if(event.mods.isPopupMenu())
        {
            amiga.showSaveSettingsPopup();
        }
    }

} // amigaMon namespace